package com.checkout.settlement.{{ cookiecutter.scheme_slug }}.confirmation.model;

import java.math.BigDecimal;
import java.time.Instant;

public record Charge(
    String fileName,
    int lineNumber,
    String recordType,
    String sequenceNumber,
    String cardNumber,
    String chargeDate,
    String chargeType,
    String typeOfCharge,
    String referenceNumber,
    String authorizationNumber,
    String programTransactionRate,
    BigDecimal interchangePTFinUSD,
    BigDecimal grossChargeAmount,
    BigDecimal netChargeAmount,
    BigDecimal alternateCurrencyGrossAmount,
    BigDecimal alternateCurrencyNetAmount,
    BigDecimal interchangeCommissionInTransactionCurrency,
    BigDecimal interchangeCommissionInAlternateCurrency,
    BigDecimal grossSettlementAmount,
    BigDecimal netSettlementAmount,
    BigDecimal interchangeCommissionSettlementAmount,
    BigDecimal grossSettlementAmountInUSD,
    BigDecimal netSettlementAmountInUSD,
    BigDecimal interchangeCommissionInUSD,
    BigDecimal interchangePTFInSettlementCurrency,
    String pricingRuleName,
    String pricingRuleCode,
    String pricingRuleSerialNumber,
    Instant settlementDate,
    String eci,
    String cavv,
    String networkReferenceId,
    BigDecimal ATMInterchangeFeeInUSD,
    BigDecimal ATMSecurityFeeInUSD,
    BigDecimal ATMNetworkInternationalProcessingFeeInUSD,
    BigDecimal ATMInterchangeFeeInSettlementCurrency,
    BigDecimal ATMSecurityFeeInSettlementCurrency,
    BigDecimal ATMNetworkInternationalProcessingFeeInSettlementCurrency,
    BigDecimal surchargeFee,
    String acquirerGeoCode,
    String cardProductType,
    String mccCode,
    String intesCode,
    String merchantId,
    String cardholderPresent,
    String cardPresent,
    String captureMethod,
    String merchantGeoCode,
    String issuerGeoCode,
    String merchantPAN,
    String specialConditionsIndicator,
    String filler) implements ConfirmationRecord {
}
